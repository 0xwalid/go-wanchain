// Code generated by protoc-gen-go. DO NOT EDIT.
// source: syncFile.proto

/*
Package syncFile is a generated protocol buffer package.

It is generated from these files:
	syncFile.proto

It has these top-level messages:
	SyncFileRequest
	SyncFileReply
*/

// Copyright 2017 Wanglu.
//
// Author: zhu.zhengming@wanglutech.com.

package syncFile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type SyncFileRequest struct {
	NodeAddr string `protobuf:"bytes,1,opt,name=nodeAddr" json:"nodeAddr,omitempty"`
	NodePIN  string `protobuf:"bytes,2,opt,name=nodePIN" json:"nodePIN,omitempty"`
	FileData []byte `protobuf:"bytes,3,opt,name=fileData,proto3" json:"fileData,omitempty"`
}

func (m *SyncFileRequest) Reset()                    { *m = SyncFileRequest{} }
func (m *SyncFileRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncFileRequest) ProtoMessage()               {}
func (*SyncFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SyncFileRequest) GetNodeAddr() string {
	if m != nil {
		return m.NodeAddr
	}
	return ""
}

func (m *SyncFileRequest) GetNodePIN() string {
	if m != nil {
		return m.NodePIN
	}
	return ""
}

func (m *SyncFileRequest) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

// The response message containing the greetings
type SyncFileReply struct {
	ResCode int32 `protobuf:"varint,1,opt,name=resCode" json:"resCode,omitempty"`
}

func (m *SyncFileReply) Reset()                    { *m = SyncFileReply{} }
func (m *SyncFileReply) String() string            { return proto.CompactTextString(m) }
func (*SyncFileReply) ProtoMessage()               {}
func (*SyncFileReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SyncFileReply) GetResCode() int32 {
	if m != nil {
		return m.ResCode
	}
	return 0
}

func init() {
	proto.RegisterType((*SyncFileRequest)(nil), "syncFile.SyncFileRequest")
	proto.RegisterType((*SyncFileReply)(nil), "syncFile.SyncFileReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HsmSync service

type HsmSyncClient interface {
	// Sends a sync file.
	SyncFile(ctx context.Context, in *SyncFileRequest, opts ...grpc.CallOption) (*SyncFileReply, error)
}

type hsmSyncClient struct {
	cc *grpc.ClientConn
}

func NewHsmSyncClient(cc *grpc.ClientConn) HsmSyncClient {
	return &hsmSyncClient{cc}
}

func (c *hsmSyncClient) SyncFile(ctx context.Context, in *SyncFileRequest, opts ...grpc.CallOption) (*SyncFileReply, error) {
	out := new(SyncFileReply)
	err := grpc.Invoke(ctx, "/syncFile.HsmSync/SyncFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HsmSync service

type HsmSyncServer interface {
	// Sends a sync file.
	SyncFile(context.Context, *SyncFileRequest) (*SyncFileReply, error)
}

func RegisterHsmSyncServer(s *grpc.Server, srv HsmSyncServer) {
	s.RegisterService(&_HsmSync_serviceDesc, srv)
}

func _HsmSync_SyncFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HsmSyncServer).SyncFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syncFile.HsmSync/SyncFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HsmSyncServer).SyncFile(ctx, req.(*SyncFileRequest))
	}

	//ctx context.Context, req interface{}, info *UnaryServerInfo, handler UnaryHandler

	return interceptor(ctx, in, info, handler)
}

var _HsmSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "syncFile.HsmSync",
	HandlerType: (*HsmSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncFile",
			Handler:    _HsmSync_SyncFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "syncFile.proto",
}

func init() { proto.RegisterFile("syncFile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xae, 0xcc, 0x4b,
	0x76, 0xcb, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x92,
	0xb9, 0xf8, 0x83, 0xa1, 0xec, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x29, 0x2e, 0x8e,
	0xbc, 0xfc, 0x94, 0x54, 0xc7, 0x94, 0x94, 0x22, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x38,
	0x5f, 0x48, 0x82, 0x8b, 0x1d, 0xc4, 0x0e, 0xf0, 0xf4, 0x93, 0x60, 0x02, 0x4b, 0xc1, 0xb8, 0x20,
	0x5d, 0x69, 0x99, 0x39, 0xa9, 0x2e, 0x89, 0x25, 0x89, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x3c, 0x41,
	0x70, 0xbe, 0x92, 0x26, 0x17, 0x2f, 0xc2, 0x92, 0x82, 0x9c, 0x4a, 0x90, 0x31, 0x45, 0xa9, 0xc5,
	0xce, 0xf9, 0x29, 0xa9, 0x60, 0x1b, 0x58, 0x83, 0x60, 0x5c, 0x23, 0x6f, 0x2e, 0x76, 0x8f, 0xe2,
	0x5c, 0x90, 0x6a, 0x21, 0x07, 0x2e, 0x0e, 0x98, 0x2e, 0x21, 0x49, 0x3d, 0xb8, 0x0f, 0xd0, 0x9c,
	0x2b, 0x25, 0x8e, 0x4d, 0xaa, 0x20, 0xa7, 0x52, 0x89, 0xc1, 0xc9, 0x80, 0x4b, 0xb6, 0x3c, 0x31,
	0x2f, 0x3d, 0xa7, 0x34, 0x33, 0x2f, 0x59, 0x2f, 0xa3, 0x38, 0x37, 0xb8, 0xb4, 0xa0, 0x20, 0xbf,
	0xa8, 0x04, 0xae, 0xc1, 0x09, 0xee, 0xac, 0x00, 0x50, 0xb0, 0x04, 0x30, 0x26, 0xb1, 0x81, 0xc3,
	0xc7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x47, 0x20, 0x4b, 0xd2, 0x31, 0x01, 0x00, 0x00,
}
