now the system only support cli wallet to transfer in Anonymous transaction mode

here shows how to transfer from acount1 to account2 in Anonymous transaction mode in geth 

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
  personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);

5. get anonymous address for account2
   var pubs = eth.getPublicKeysRawStr(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(pubs)

7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"

8  transfer eth to the Anonymous contract
	eth.sendOTATransaction({from: eth.accounts[1],to: toAddr,value: web3.toWei(1),data: otaAddr})

9  account2 get balance from the anonymous contract
	eth.sendOTARefundTransaction({from:eth.accounts[2],to:toAddr,value:web3.toWei(1),data: otaAddr})
	
============================================================================================================

how to buy stamp

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
	//personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);

5. get anonymous address for account2
   var pubs = eth.getPublicKeysRawStr(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(pubs)
	
7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"
8. buy a stamp
  eth.buyOTAStamp({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	

============================================================================================================
to get ota stamp set

9. eth.getStampMixSet({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	  
  
============================================================================================================  
how to debug contract transfer

the sample contract is ERC20.sol in the folder ./go-wanchain/contracts/erc20 in the github repo

1. unlock account 1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
2. unlock account 2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);

3. set contract abi
	var erc20simple_contract = web3.eth.contract([{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_receiver","type":"address"},{"name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"string"}],"name":"otabalanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"string"},{"name":"_value","type":"uint256"}],"name":"otatransfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]);

4. create a contract instance
	var erc20simpleInt = erc20simple_contract.new(
   {
     from: web3.eth.accounts[1], 
     data: '0x6060604052341561000f57600080fd5b6107878061001e6000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806323b872dd1461007b57806340c10f19146100f457806366bf741b1461013657806370a08231146101a7578063744a804c146101f4578063a9059cbb14610272575b600080fd5b341561008657600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506102cc565b604051808215151515815260200191505060405180910390f35b34156100ff57600080fd5b610134600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061044b565b005b341561014157600080fd5b610191600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061049b565b6040518082815260200191505060405180910390f35b34156101b257600080fd5b6101de600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610510565b6040518082815260200191505060405180910390f35b34156101ff57600080fd5b610258600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610558565b604051808215151515815260200191505060405180910390f35b341561027d57600080fd5b6102b2600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105dd565b604051808215151515815260200191505060405180910390f35b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561039957506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b1561043f57816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060019050610444565b600090505b9392505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b60006001826040518082805190602001908083835b6020831015156104d557805182526020820191506020810190506020830392506104b0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000816001846040518082805190602001908083835b602083101515610593578051825260208201915060208101905060208303925061056e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082825401925050819055506001905092915050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156106aa57506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b1561075057816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060019050610755565b600090505b929150505600a165627a7a72305820c0ba549fd3dea569044de38bf160f592b4041a45a1e824abf294c923f814c21c0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
  }) 
  
  will get the data like following
  Contract mined! address: 0x9b9a257d23543d8a7d82e31b5cd05472a1ea2af3 transactionHash: 0xcdb24a1484c925c199c71d7741bb4b0c65b3c9d0797c0184271db63ea869d736

5. set the contract address
	var contractAddr = "0x9b9a257d23543d8a7d82e31b5cd05472a1ea2af3" 
 
6. set the contract instance referrence
	var erc20simple = erc20simple_contract.at(contractAddr)

7. get anonymous address for account1
	var pubs1 = eth.getPublicKeysRawStr(eth.accounts[1]);

8. generate OTA address for account1  
	var otaAddr1 = eth.generateOneTimeAddress(pubs1)

9  get anonymous address for account2
	var pubs2 = eth.getPublicKeysRawStr(eth.accounts[2]);

10. generate OTA address for account2  
	var otaAddr2 = eth.generateOneTimeAddress(pubs2)

11. generate data for call otatranfer
	var callData = erc20simple.otatransfer.getData(otaAddr2,web3.toWei(1))

12. buy a stamp for ota tranfere transaction
	eth.buyOTAStamp({from: eth.accounts[1],to: "0x0000000000000000000000000000000000000006",value: web3.toWei(0.01),data: otaAddr1})

13. get transfer signed raw data
	eth.signOTAContractTransaction({from:eth.accounts[1], to:contractAddr, data:callData},otaAddr1)

	will got following data
	{
	  raw: "0xf904fa028083030d4083015f9094000000000000000000000000000000000000000580b9049004940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3aa5be27b3328dc50d78e2f00a79335f84d989e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044104e61d95e5f523162e4d2e1bf3d25624998bbf96073634b7693ab7b46c6034cc39ada67de2d8430ebe18765b3b43afc2a44fef133bb4fe4af0c09a8b1964f6f1d82037f2a55dfb580cb8c1c2e0ee4e77b61d0d15f1239a5e3006732d71c7728976ae2081bfbe19c7693674fcbc822ad58ed8c7822431ddff3fd2247aa0cf2b839a0f614104e61d95e5f523162e4d2e1bf3d25624998bbf96073634b7693ab7b46c6034cc39ada67de2d8430ebe18765b3b43afc2a44fef133bb4fe4af0c09a8b1964f6f1d82086dae85c43e9c1cf86980f8b6606c9a2835264257ef721f5ce7cd217382b3b49201d5d3ca3f54acbe4f1d03401abd4d08da2fd875b31ae092c3cd0c4ad8f3791874104e61d95e5f523162e4d2e1bf3d25624998bbf96073634b7693ab7b46c6034cc39ada67de2d8430ebe18765b3b43afc2a44fef133bb4fe4af0c09a8b1964f6f1d820e3851502ed665213f3533bf26978c25bfb397519f090afbb99d1caeba03fa47b2061e9f4708021b127012b88af5565e0b52428c112007e5b4890ab2ba3a3fc9f0d4104e61d95e5f523162e4d2e1bf3d25624998bbf96073634b7693ab7b46c6034cc39ada67de2d8430ebe18765b3b43afc2a44fef133bb4fe4af0c09a8b1964f6f1d8207279508ed1a184bd4eca7ddffd2dd65ca268059dea25979229a77ea2cf5dd54f20b0049cf956544365ffa30764ec60f26dca9bc2b09ad05e593ec48c23343990384104793959268f737fbc5532f2e7e71344d7457aa9ea9cb1f80673128920d63adbcad235fa2d4a5ffca3c9f5e73d516978f9f8849708cb472835445be75aa4a6396720cea91537358a44d0ab64bbdf47cb957e600d2df13e5686c025d0a3035c6eff1f1ba01de69d51fb44efca17d25924cd69d372baed67ae4599fa9a0fc372b826665361a0072bc480fcdbab79de9e1df3928151928f621bf5dad00972ff53150fa02e888bc0c0c0c0",
	  tx: {
		Txtype: "0x2",
		gas: "0x15f90",
		gasPrice: "0x30d40",
		hash: "0x32d16bf995ca39697de48f25f39cc444039797dcb8666d1a2fff95538e61ec9b",
		input: "0x04940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3abb6ac8e384815825d1e10845130461fabe647ec2db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec5b1c50627c8a15955f6c0b7b3c02475c74f56b3580aa58e9cd9334d5f671a8e90da0fcab1cefff4831f3bf1d10ca329596a3a5b237b241cbc1e4671c5b0b9e4410441044968d461b60756f493df75acb25e2081aad5df8e820e16f5a5098546d5fd022bd5b441f0093fba79605b3326d6c8f7ca90d54dad597e356e25414b89d1f9f313200ec3bc60b3923a101408def453a6d542915c88cfdfddb0cde4240083980e4b0520b1277b2bd89075101475bc18593bf4f54d229800743812275e842daea7bc2f0941042db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec520154650e4c5a4c146d55adec5ecf20a7e491cadbb9d7e8bc0ff020cf41b9422be2078a0f99406abc5267c33368046377a9ff4aef27d89a21dd330c7032e54df0d64410410b5560928634b63d3139b37a41aa8ba795433c9ecdde0d799297e4c855c30f1f4a2a8e3fdeef8f34a99f64ebd9865db0fd8c21f7e186afcf677c0babde95e2b2011b43c9df48d1acaf52cf5e001df5e6b0ed9c66ee8cf70ec1d8a026d2de8ded220309747c9d425c7c064eca35a277a217264f6cbf28d1ce95b4c00c77244d262c34104a2e3996bc920f4b5856ab52c06142eeeb962e39c5fe24f2f297583458b28e09b318e3c3abf291fbcfc58c43aa0a017a71da1e70b494126a66bd014c7ad7ebc262048625a85f2617fe5d2f9b0972aee3ad3d5afea3845508dee1351953587180a4f208cc69d104258a7a79c4156dcc9e196d017b09af216b0660b4d630fdb684bb5494104cc324a965cb52c910d30d5d034246a9010748f85fa2ea74a44d5bf44fa31769ec3710a292221b51132bc56f34d860fd0fb204a805205c92918e62ffc60b84d2e204ed705bd960dda314d54fdd9f30161c51b19c8feabefbdb94c50c577988cd7fb",
		nonce: "0x0",
		r: "0x329cbfad81ebca28a4f83a58baf0c5f5b823421a90032a0ba140cce246ece1fd",
		s: "0x47bc4c6f04977c86b10f0f52f21add7882a78ab32b4578fc6e4e2bd2513b1a2d",
		to: "0x0000000000000000000000000000000000000005",
		v: "0x1c",
		value: "0x0"
	  }
	}


14. assign raw data from above signOta..
	var rawTx = "0xf904fa028083030d4083015f9094000000000000000000000000000000000000000580b9049004940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000001023078623963343064656236663937343662373865376135313961303832353331306132346434316632666633346635376563393938336435356565663833633036313230316165613466616436386561363534613434386230336461313366303265383164383832393033366430396539366463363534343565303239386231303664353264326365346263376131396534383764646161386430396261653861646535313232616139653432643461303131623338383238376130333265376531356437396339626462653566343636623266376662303935366562343764306232346365376232353435346235363764333861386365623039636162666636610000000000000000000000000000000000000000000000000000000000009b9a257d23543d8a7d82e31b5cd05472a1ea2af3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004410428019d8fae3309751cca0c3a49eb33a6b52b551d6a747b85e8548ed35ec8415f891f1dc34a8bbaf99cc0b13e50596af41a42b49e516e96b9dfca0b26bb435d862044630f53d4182a1b162bdffbe913aaedfccd8ccb8e4270503950f12c83b77a2b20e39061ca520bb718f453e8583b1251c621afef0c65f59c95c1b0cd8c64c8bdd4410428019d8fae3309751cca0c3a49eb33a6b52b551d6a747b85e8548ed35ec8415f891f1dc34a8bbaf99cc0b13e50596af41a42b49e516e96b9dfca0b26bb435d862010c3dccc45d50fa2cd3b55346fae090c8309eeef6de0d7dc37598ec98c82e01620a9d268df791fdc36cd71c7ed94433727aa0fbcf81179d65ba79e3891c6f936c5410428019d8fae3309751cca0c3a49eb33a6b52b551d6a747b85e8548ed35ec8415f891f1dc34a8bbaf99cc0b13e50596af41a42b49e516e96b9dfca0b26bb435d86206ba17fc0fbb9eb2741523a7cc8a3de39dd66fed87a109603296e2e284d3549f620ddfcc53cccad9bab222c48249a5ad95ef8da3ec16aa2cafa34915a613268e1f0410428019d8fae3309751cca0c3a49eb33a6b52b551d6a747b85e8548ed35ec8415f891f1dc34a8bbaf99cc0b13e50596af41a42b49e516e96b9dfca0b26bb435d86202ededfa4256054a48772a5233e5b3fda28bf45957ea0cf442eedece5d78f4960209d7c8a80732fdd230dac271837e2427fe11e8bca8b2e3ad318ad2b6e5b94237641041283feaad24a9b4d2d477ad8518a59344b44773b9209c477c5688d39173711db57e5231ebe8bd1352de1d5f3a8c3fdb809f8c76ef827561e57c0b0c8c634ab962032203e6e2a1698ce7126c8e9c330ca96ba254b0e6765d7036c567f285638f6671ba0d1b572e12f30ba26946d59b63920bfd771a002809436ab7cd113f3c5c38fb4fba06efdef9fd38b33711d83cf2db4d40bb765a39e698de7fe4a72dcaccd27a82701c0c0c0c0"

15. begin contract ota transfer transaction
	eth.sendRawTransaction(rawTx)

16. veriy the ota tranfer result
	erc20simple.otabalanceOf(otaAddr2)
