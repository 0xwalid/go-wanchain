now the system only support cli wallet to transfer in Anonymous transaction mode

here shows how to transfer from acount1 to account2 in Anonymous transaction mode in geth 

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
  personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);	
	
5. get anonymous address for account2
   var wanAddr = eth.getWanAddress(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(wanAddr)

7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"

8  transfer eth to the Anonymous contract
	eth.sendOTATransaction({from: eth.accounts[1],to: toAddr,value: web3.toWei(1),data: otaAddr})
	
9  account2 get balance from the anonymous contract
	eth.sendOTARefundTransaction({from:eth.accounts[2],to:toAddr,value:web3.toWei(1),data: otaAddr})

10 get balance
   web3.fromWei(eth.getBalance(eth.accounts[2]));
	
============================================================================================================

how to buy stamp

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
	//personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);

5. get anonymous address for account2
   var pubs = eth.getPublicKeysRawStr(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(pubs)
	
7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"
8. buy a stamp
  eth.buyOTAStamp({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	

============================================================================================================
to get ota stamp set

9. eth.getStampMixSet({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	  
  
============================================================================================================  
how to debug contract transfer

the sample contract is ERC20.sol in the folder ./go-wanchain/contracts/erc20 in the github repo

1. unlock account 1
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);
	
2. unlock account 2
	personal.unlockAccount(eth.accounts[3],"wanglu",9999);

3. set contract abi
	var  erc20simple_contract = web3.eth.contract([{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_receiver","type":"address"},{"name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":true,"inputs":[{"name":"_owner","type":"string"}],"name":"otabalanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":true,"inputs":[],"name":"MINT_CALLER","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":false,"inputs":[{"name":"_receiver","type":"string"},{"name":"_amount","type":"uint256"}],"name":"otamint","outputs":[],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_from","type":"string"},{"name":"_to","type":"string"},{"name":"_value","type":"uint256"},{"name":"sig","type":"bytes"}],"name":"otatransfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"}]);

4. deploy contract
	var erc20simpleInt = erc20simple_contract.new(
	   {
		 from: web3.eth.accounts[2], 
		 data: '0x6060604052341561000f57600080fd5b5b610b918061001f6000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806323b872dd1461009157806340c10f191461010a57806366bf741b1461014c57806370a08231146101bd5780638e17d1751461020a5780639df6192d1461025f578063a9059cbb146102c5578063f20873b21461031f575b600080fd5b341561009c57600080fd5b6100f0600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610423565b604051808215151515815260200191505060405180910390f35b341561011557600080fd5b61014a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105a7565b005b341561015757600080fd5b6101a7600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506105f8565b6040518082815260200191505060405180910390f35b34156101c857600080fd5b6101f4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061066f565b6040518082815260200191505060405180910390f35b341561021557600080fd5b61021d6106b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561026a57600080fd5b6102c3600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080359060200190919050506106bd565b005b34156102d057600080fd5b610305600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061073c565b604051808215151515815260200191505060405180910390f35b341561032a57600080fd5b610409600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506108bf565b604051808215151515815260200191505060405180910390f35b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156104f057506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b1561059657816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600190506105a0565b600090506105a0565b5b9392505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b5050565b60006001826040518082805190602001908083835b60208310151561063357805182525b60208201915060208101905060208303925061060d565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205490505b919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600081565b806001836040518082805190602001908083835b6020831015156106f757805182525b6020820191506020810190506020830392506106d1565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082825401925050819055505b5050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561080957506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b156108af57816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600190506108b9565b600090506108b9565b5b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108fb57600080fd5b826001866040518082805190602001908083835b60208310151561093557805182525b60208201915060208101905060208303925061090f565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205410158015610a5057506001846040518082805190602001908083835b6020831015156109ab57805182525b602082019150602081019050602083039250610985565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054836001866040518082805190602001908083835b602083101515610a1957805182525b6020820191506020810190506020830392506109f3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205401115b15610b5257826001856040518082805190602001908083835b602083101515610a8f57805182525b602082019150602081019050602083039250610a69565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008282540192505081905550826001866040518082805190602001908083835b602083101515610b0957805182525b602082019150602081019050602083039250610ae3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000828254039250508190555060019050610b5c565b60009050610b5c565b5b5b9493505050505600a165627a7a72305820381cc99f08b26324baf1afee791fef1e934112a85d7f0753678e45d4c746e3cb0029', 
		 gas: '4700000'
	   }, function (e, contract){
		console.log(e, contract);
		if (typeof contract.address !== 'undefined') {
			 console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
		}
	 })
 
  will get the data like following
  Contract mined! address: 0x157631a50a9c06171b8c1d810f0588cbce916a78 transactionHash: 0xcdb24a1484c925c199c71d7741bb4b0c65b3c9d0797c0184271db63ea869d736

5. set the contract address
	var contractAddr = "0x157631a50a9c06171b8c1d810f0588cbce916a78" 
 
6. set the contract instance referrence
	var erc20simple = erc20simple_contract.at(contractAddr)

7. get anonymous address for account1
	var wanAddr1 = eth.getWanAddress(eth.accounts[2]);

8. generate OTA address for account1  
	var otaAddr1 = eth.generateOneTimeAddress(wanAddr1)

9  get anonymous address for account2
	var wanAddr2 = eth.getWanAddress(eth.accounts[3]);

10. generate OTA address for account2  
	var otaAddr2 = eth.generateOneTimeAddress(wanAddr2)

11 mint token for test,only for test
	erc20simple.otamint(otaAddr1,web3.toWei(10),{from:eth.accounts[2]})
	erc20simple.otabalanceOf(otaAddr1)
	
11. generate data for call otatranfer
	var callData = erc20simple.otatransfer.getData(otaAddr1,otaAddr2,web3.toWei(2))

	
12. buy a stamp for ota tranfere transaction
	eth.buyOTAStamp({from: eth.accounts[2],to: "0x0000000000000000000000000000000000000005",value: web3.toWei(0.01),data: otaAddr1})

	
13. get transfer signed raw data
	eth.signOTAContractTransaction({from:eth.accounts[2], to:contractAddr, data:callData},otaAddr1)

	will got following data
	{
	  raw: "0xf9053c028083030d4083015f9094000000000000000000000000000000000000000580b904d204940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3acc587c8e85ebfce73f0c3d4fd3ef2f23ee3e265d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044104b2deca622577039261fcc1cd14a854b92ef7e1858aaabd237ea804ff072a67adad400a7ddcade067ee4fadcff5ca49f4d99c381891256c6f3d7e6ad0b77286d720a74b052217d140965d1718310798f8e64c7db7e2ce35abb1e009cf7329d37abe20da2ea7b929b6a4e74d5f89a0936131e0b4b2aa5d1920b5186550be761ac180954104b2deca622577039261fcc1cd14a854b92ef7e1858aaabd237ea804ff072a67adad400a7ddcade067ee4fadcff5ca49f4d99c381891256c6f3d7e6ad0b77286d7202224ce1a1ed4e24d33be64f970afa60106fae61d0537891e9b342753eac1cdf62013c6c17090c01d227f08f665033d3f17efacc35bee3e48b2a4e0a5400a56f6fb4104b2deca622577039261fcc1cd14a854b92ef7e1858aaabd237ea804ff072a67adad400a7ddcade067ee4fadcff5ca49f4d99c381891256c6f3d7e6ad0b77286d7200649bd5559671b652a88722bd5f8de71b0e54b0a7d7eb3cba0a184cecf5b0454203d30f521db58a1dc7d15255be0a0428fb018ce6c943e723150eb31bae96de14041043871b44cdadffae9023f018faf5c8fcb1df56b77dde785f951753923dc505fa715866830f6b9a5406a93ca6547d964bd521a3a999412f9382ac85e32171b14d720ecb540c1dd1ced1fa6416c6835fd44846fbfa9f2e16468a7020a51931779e40b20384698d363389bc18dc00847a61eb19adc55493eb73c68f116b323d1d7fdfee74104543b6d1435050a234654534654b83a773c41fef1ad1dbeb5ff5c9617fc07844cb0a83903ef1af4c3cf323e253c4550966d39bb5552444b9ccd6bd8a7c0885c93206200cf07962f7e28c1b60cf84e530a1b4bc2a8843ad15048662f7ccad99bf58941c837b041595557f5036c26cc77e6d170dd055b716c424e5d853b924f32f7a0b16597d6a094e62be1de9dfd5d7f2eecd38f1576cdc9b86440a6e657667c25e479001ba05114b6b9823fa1ad482b324a5a5b37452aca7a5476d1100e98a971d41cdeab70a0624ba0c36b81ca2281a6b8a9a5fbea4653217a8425eab27a7d4ca3bc9828f93dc0c0c0c0",
	  tx: {
		Txtype: "0x2",
		gas: "0x15f90",
		gasPrice: "0x30d40",
		hash: "0x32d16bf995ca39697de48f25f39cc444039797dcb8666d1a2fff95538e61ec9b",
		input: "0x04940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3abb6ac8e384815825d1e10845130461fabe647ec2db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec5b1c50627c8a15955f6c0b7b3c02475c74f56b3580aa58e9cd9334d5f671a8e90da0fcab1cefff4831f3bf1d10ca329596a3a5b237b241cbc1e4671c5b0b9e4410441044968d461b60756f493df75acb25e2081aad5df8e820e16f5a5098546d5fd022bd5b441f0093fba79605b3326d6c8f7ca90d54dad597e356e25414b89d1f9f313200ec3bc60b3923a101408def453a6d542915c88cfdfddb0cde4240083980e4b0520b1277b2bd89075101475bc18593bf4f54d229800743812275e842daea7bc2f0941042db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec520154650e4c5a4c146d55adec5ecf20a7e491cadbb9d7e8bc0ff020cf41b9422be2078a0f99406abc5267c33368046377a9ff4aef27d89a21dd330c7032e54df0d64410410b5560928634b63d3139b37a41aa8ba795433c9ecdde0d799297e4c855c30f1f4a2a8e3fdeef8f34a99f64ebd9865db0fd8c21f7e186afcf677c0babde95e2b2011b43c9df48d1acaf52cf5e001df5e6b0ed9c66ee8cf70ec1d8a026d2de8ded220309747c9d425c7c064eca35a277a217264f6cbf28d1ce95b4c00c77244d262c34104a2e3996bc920f4b5856ab52c06142eeeb962e39c5fe24f2f297583458b28e09b318e3c3abf291fbcfc58c43aa0a017a71da1e70b494126a66bd014c7ad7ebc262048625a85f2617fe5d2f9b0972aee3ad3d5afea3845508dee1351953587180a4f208cc69d104258a7a79c4156dcc9e196d017b09af216b0660b4d630fdb684bb5494104cc324a965cb52c910d30d5d034246a9010748f85fa2ea74a44d5bf44fa31769ec3710a292221b51132bc56f34d860fd0fb204a805205c92918e62ffc60b84d2e204ed705bd960dda314d54fdd9f30161c51b19c8feabefbdb94c50c577988cd7fb",
		nonce: "0x0",
		r: "0x329cbfad81ebca28a4f83a58baf0c5f5b823421a90032a0ba140cce246ece1fd",
		s: "0x47bc4c6f04977c86b10f0f52f21add7882a78ab32b4578fc6e4e2bd2513b1a2d",
		to: "0x0000000000000000000000000000000000000005",
		v: "0x1c",
		value: "0x0"
	  }
	}


14. assign raw data from above signOta..
	var rawTx = "0xf905ba028083030d4083015f9094000000000000000000000000000000000000000580b9055004940248f20873b2000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000001bc16d674eca50a9c06171b8c1d810f0588cbce916a780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044104efc5764c2cf7888cc440799c1e8caae0b4c535d214488b4c5f91e4f5c50370785d2e4365c581e0111f7b812bbc86f79de69fa83570c786dd46c617dabb4eddb020e213b89f433e886f1fa077e7e5b71ca6e84a39555685eda5bdd95229dca5644a209660306b3c58bbfda3da787ded35b89e666f267c5554bfcf0c4a33b061afd4144104efc5764c2cf7888cc440799c1e8caae0b4c535d214488b4c5f91e4f5c50370785d2e4365c581e0111f7b812bbc86f79de69fa83570c786dd46c617dabb4eddb0209ff309e895771df590479db4748ffb2dc23638d8b2929addd8b4649533c629c32090527d7cf760c3ece3d0781d65f500811616f6059f4fe1adb42542115f0c69fc4104efc5764c2cf7888cc440799c1e8caae0b4c535d214488b4c5f91e4f5c50370785d2e4365c581e0111f7b812bbc86f79de69fa83570c786dd46c617dabb4eddb020811145dc1f6b66175ac28978aac04caa850443c108242469e375271239ef09da20f5fd16bd2150514e4b3372744341ac516c26d59dd54bb4cbf849946cccebdde34104efc5764c2cf7888cc440799c1e8caae0b4c535d214488b4c5f91e4f5c50370785d2e4365c581e0111f7b812bbc86f79de69fa83570c786dd46c617dabb4eddb0207c785abf03d216754eaa5d2c683c51098de0d891b9003b063f0b6d1c2f5f25ea20ad27d90b62dd3ecbfc9824c8c805f7561197925020829cf30bf995c4da4c597f4104c172ff2aceb67ab43164e18056beb1636ca3a61f72232272236f19a3090fa4932db0fbc4b0de658feb09f33e382570e57b5a36cf3e8f1b5a320d68d4360cc0aa2000000000000000000000000000000000000000000000000000000000000000001ca010a59c25671eed67fb5465a0dfa7e8cd3fbcdbd2887d4f0cd5747e6aad04877da04772c34894c8a178b8eb3689a5cd58fb1de65a9ade2a6d15059c94ad832b0dd0c0c0c0c0"

15. begin contract ota transfer transaction
	eth.sendRawTransaction(rawTx)

16. veriy the ota tranfer result
	erc20simple.otabalanceOf(otaAddr2)
