now the system only support cli wallet to transfer in Anonymous transaction mode

here shows how to transfer from acount1 to account2 in Anonymous transaction mode in geth 

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
  personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);	
	
5. get anonymous address for account2
   var wanAddr = eth.getWanAddress(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(wanAddr)

7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"

8  transfer eth to the Anonymous contract
	eth.sendOTATransaction({from: eth.accounts[1],to: toAddr,value: web3.otWei(1),data: otaAddr})
/***************************
*S. txBuyCoinData = eth.buyCoinNote.getData(otaAddr, value)
S1. eth.sendTransaction({from:eth.accounts[2],to:toAddr,value:web3.toWei(1),data: txBuyCoinData, gas:})
****************************/
	
9  account2 get balance from the anonymous contract
	eth.sendOTARefundTransaction({from:eth.accounts[2],to:toAddr,value:web3.toWei(1),data: otaAddr})
/****************************
S.txRefundData = eth.refundCoin.getData([value])
ringData = eth.genRingSign('stamp/coin', 'privatekey4ota')
S2.eth.sendOTATransaction({from:receiver, to:, data: ringdata + txRefundData, gas})
****************************/




10 get balance
   web3.fromWei(eth.getBalance(eth.accounts[2]));
	
============================================================================================================

how to buy stamp

1.there are at least 3 account in cli node and keep the balance>1 ether for each account
	//personal.newAccount("wanglu")

2. check balance for account[2]
  web3.fromWei(eth.getBalance(eth.accounts[2]))

3. unlock Account1
	personal.unlockAccount(eth.accounts[1],"wanglu",9999);
	
4  unlock account2
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);

5. get anonymous address for account2
   var pubs = eth.getWanAddress(eth.accounts[2]);

6. generate OTA address for account2  
	var otaAddr = eth.generateOneTimeAddress(pubs)
	
7. set the 	Anonymous contract address
	var toAddr = "0x0000000000000000000000000000000000000006"
8. buy a stamp
  eth.buyOTAStamp({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	

/****************************
S3. txBuyCoinData = eth.buyStamp.getData(otaAddr, value)
eth.sendTransaction({from:eth.accounts[2],to:toAddr,value:web3.toWei(1),data: txBuyCoinData, gas:})
****************************/
============================================================================================================
to get ota stamp set

9. eth.getStampMixSet({from: eth.accounts[1],to: toAddr,value: web3.toWei(0.01),data: otaAddr})	  
  
============================================================================================================  
how to debug contract transfer

the sample contract is ERC20.sol in the folder ./go-wanchain/contracts/erc20 in the github repo

1. unlock account 1
	personal.unlockAccount(eth.accounts[2],"wanglu",9999);
	
2. unlock account 2
	personal.unlockAccount(eth.accounts[3],"wanglu",9999);

3. set contract abi
	var  erc20simple_contract =  web3.eth.contract([{"constant":false,"inputs":[{"name":"_from","type":"string"},{"name":"_to","type":"string"},{"name":"_value","type":"uint256"}],"name":"otatransfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_receiver","type":"address"},{"name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":true,"inputs":[{"name":"_owner","type":"string"}],"name":"otabalanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":true,"inputs":[],"name":"MINT_CALLER","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","stateMutability":"view"},{"constant":false,"inputs":[{"name":"_receiver","type":"string"},{"name":"_amount","type":"uint256"}],"name":"otamint","outputs":[],"payable":false,"type":"function","stateMutability":"nonpayable"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function","stateMutability":"nonpayable"}]);

4. deploy contract
	var erc20simpleInt = erc20simple_contract.new(
		   {
			 from: web3.eth.accounts[2], 
			 data: '0x6060604052341561000f57600080fd5b5b610b4d8061001f6000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a00885c1461009157806323b872dd1461015257806340c10f19146101cb57806366bf741b1461020d57806370a082311461027e5780638e17d175146102cb5780639df6192d14610320578063a9059cbb14610386575b600080fd5b341561009c57600080fd5b610138600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080359060200190919050506103e0565b604051808215151515815260200191505060405180910390f35b341561015d57600080fd5b6101b1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610685565b604051808215151515815260200191505060405180910390f35b34156101d657600080fd5b61020b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610809565b005b341561021857600080fd5b610268600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061085a565b6040518082815260200191505060405180910390f35b341561028957600080fd5b6102b5600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108d1565b6040518082815260200191505060405180910390f35b34156102d657600080fd5b6102de61091a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561032b57600080fd5b610384600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190505061091f565b005b341561039157600080fd5b6103c6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061099e565b604051808215151515815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041c57600080fd5b816001856040518082805190602001908083835b60208310151561045657805182525b602082019150602081019050602083039250610430565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020541015801561057157506001836040518082805190602001908083835b6020831015156104cc57805182525b6020820191506020810190506020830392506104a6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054826001856040518082805190602001908083835b60208310151561053a57805182525b602082019150602081019050602083039250610514565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205401115b1561067357816001846040518082805190602001908083835b6020831015156105b057805182525b60208201915060208101905060208303925061058a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008282540192505081905550816001856040518082805190602001908083835b60208310151561062a57805182525b602082019150602081019050602083039250610604565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082825403925050819055506001905061067d565b6000905061067d565b5b5b9392505050565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561075257506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b156107f857816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060019050610802565b60009050610802565b5b9392505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b5050565b60006001826040518082805190602001908083835b60208310151561089557805182525b60208201915060208101905060208303925061086f565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205490505b919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600081565b806001836040518082805190602001908083835b60208310151561095957805182525b602082019150602081019050602083039250610933565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082825401925050819055505b5050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610a6b57506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610b1157816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060019050610b1b565b60009050610b1b565b5b929150505600a165627a7a72305820fd12fd481c8fb7230e4f884a2cf0cad97f4108d1dca4082b8db4d3a617cdfb8e0029', 
			 gas: '4700000'
		   }, function (e, contract){
			console.log(e, contract);
			if (typeof contract.address !== 'undefined') {
				 console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
			}
   })
 
  will get the data like following
  Contract mined! address: 0x751ee334f2d6d8eedbf6f18cf6cc54676814d867 transactionHash: 0xcdb24a1484c925c199c71d7741bb4b0c65b3c9d0797c0184271db63ea869d736

5. set the contract address
	var contractAddr = "0x751ee334f2d6d8eedbf6f18cf6cc54676814d867" 
 
6. set the contract instance referrence
	var erc20simple = erc20simple_contract.at(contractAddr)

7. get anonymous address for account1
	var wanAddr1 = eth.getWanAddress(eth.accounts[2]);

8. generate OTA address for account1  
	var otaAddr1 = eth.generateOneTimeAddress(wanAddr1)
	var otaStamp = eth.generateOneTimeAddress(wanAddr1)

9  get anonymous address for account2
	var wanAddr2 = eth.getWanAddress(eth.accounts[3]);

10. generate OTA address for account2  
	var otaAddr2 = eth.generateOneTimeAddress(wanAddr2)

11 mint token for test,only for test
	erc20simple.otamint(otaAddr1,web3.toWei(10),{from:eth.accounts[2]})
	erc20simple.otabalanceOf(otaAddr1)
	
11. generate data for call otatranfer
	var callData = erc20simple.otatransfer.getData(otaAddr1,otaAddr2,web3.toWei(2))

	
12. buy a stamp for ota tranfere transaction
	eth.buyOTAStamp({from: eth.accounts[2],to: "0x0000000000000000000000000000000000000005",value: web3.toWei(0.01),data: otaStamp})

	
13. get transfer signed raw data
	eth.signOTAContractTransaction({from:eth.accounts[2], to:contractAddr, data:callData},otaAddr1,otaStamp)

	will got following data
	{
	  raw: "0xf9051b028083030d4083015f9094000000000000000000000000000000000000000580b904b1045501e80a00885c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000001bc16d674ecbddcf25d0a42ea6f041bde4d0e82902a0e95d31b4caf778744b15d7668914060826bb25f1750622bdf7950ad01eddce72303b160fb5f5b35956bac614fff4f3c04af80fc7215199f499b04257d5832b77d0b3110104410459f6ed6cb857a65dce68b58d8808092e984355da25b42247dd1c3372ea11ff7285a33a33cf368ac5e4fab3966ce910df99185ced64c7ce145e036276781186c2203839a9218c6ccd5d6c958ea64456987f516fb384f3006e85bb0ee03a165b5b1720de9715236ca7eaeda441b532a3ca8cc81f40135a0616a0959cd6c59fc4c978a041045402f35c0ce86ddb3e0fad716816931c52975a035a8042f0d1fc31ab7e11ed2310554cfccf64d5074d5589e68f68b4aae02bd87b31f67eb2d85641ec0708a87820da4bfac583246786f143ed3e68b762c2a0527e87477664d155cda78967e7cbb720dbec2b9e52fb67d54107165bd9aaf784bbc827b8ea4c0d675ad4cc19b354805c410444f5bbd4d3951b81f4b6eed82a6d59d21243c945f1bde0f69557e86805819dfd5a8acf7cf5e1cafee672822a1e31006c83c36735e5a3c73be3c55582f9bf8a33208b4f3b412f9c90b29be4e25caf37f0ba21adfe800bb26256149459fd073e564a208063da7da470351ebf4891cf3da1edcc8e68f7b04bf945fb3c334ba4d6d450164104e0cea93a8b57b849c58d4050be57cd6e1c8bd8dd2ccb18c01179879547510eed8507945902e5244bae291fb7e286a21250fbecee66690b209f79813125a511de20ff6b52d373ce870e5d380e7ea0f734e13a199c4e4ff63c61e648b3c181e7d4cc20e2765bc71617063c337ceee7e239110c0c0d0affdc6336aab676f9f0643230584104140cda306e5a981748a5d16882c79be9b47225ddc207fe6af697a4cdc29c4e133f60cef5de63f721025aca11dbdfe5522637124f3d9f06a7eb22178c5e44710620b5f5b35956bac614fff4f3c04af80fc7215199f499b04257d5832b77d0b311011ba0aa95cbd833d51bd28aaaf8b99a3b9dadf96fb871aad75fa4d4d104a19a8e4b7ba00ea36bcbae7a570117375ae0bb43b0a2d2095c395252347e64bc29e2c35cc929c0c0c0c0",
	  tx: {
		Txtype: "0x2",
		gas: "0x15f90",
		gasPrice: "0x30d40",
		hash: "0x32d16bf995ca39697de48f25f39cc444039797dcb8666d1a2fff95538e61ec9b",
		input: "0x04940188744a804c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000de0b6b3abb6ac8e384815825d1e10845130461fabe647ec2db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec5b1c50627c8a15955f6c0b7b3c02475c74f56b3580aa58e9cd9334d5f671a8e90da0fcab1cefff4831f3bf1d10ca329596a3a5b237b241cbc1e4671c5b0b9e4410441044968d461b60756f493df75acb25e2081aad5df8e820e16f5a5098546d5fd022bd5b441f0093fba79605b3326d6c8f7ca90d54dad597e356e25414b89d1f9f313200ec3bc60b3923a101408def453a6d542915c88cfdfddb0cde4240083980e4b0520b1277b2bd89075101475bc18593bf4f54d229800743812275e842daea7bc2f0941042db7b5db10a2430a65aaa01c7f055c88945bd9e43de0d528ce1fad816d28b52badbb905a40721c7950e80eb249c0de3d42402d45577116d844a4cc1c33f39ec520154650e4c5a4c146d55adec5ecf20a7e491cadbb9d7e8bc0ff020cf41b9422be2078a0f99406abc5267c33368046377a9ff4aef27d89a21dd330c7032e54df0d64410410b5560928634b63d3139b37a41aa8ba795433c9ecdde0d799297e4c855c30f1f4a2a8e3fdeef8f34a99f64ebd9865db0fd8c21f7e186afcf677c0babde95e2b2011b43c9df48d1acaf52cf5e001df5e6b0ed9c66ee8cf70ec1d8a026d2de8ded220309747c9d425c7c064eca35a277a217264f6cbf28d1ce95b4c00c77244d262c34104a2e3996bc920f4b5856ab52c06142eeeb962e39c5fe24f2f297583458b28e09b318e3c3abf291fbcfc58c43aa0a017a71da1e70b494126a66bd014c7ad7ebc262048625a85f2617fe5d2f9b0972aee3ad3d5afea3845508dee1351953587180a4f208cc69d104258a7a79c4156dcc9e196d017b09af216b0660b4d630fdb684bb5494104cc324a965cb52c910d30d5d034246a9010748f85fa2ea74a44d5bf44fa31769ec3710a292221b51132bc56f34d860fd0fb204a805205c92918e62ffc60b84d2e204ed705bd960dda314d54fdd9f30161c51b19c8feabefbdb94c50c577988cd7fb",
		nonce: "0x0",
		r: "0x329cbfad81ebca28a4f83a58baf0c5f5b823421a90032a0ba140cce246ece1fd",
		s: "0x47bc4c6f04977c86b10f0f52f21add7882a78ab32b4578fc6e4e2bd2513b1a2d",
		to: "0x0000000000000000000000000000000000000005",
		v: "0x1c",
		value: "0x0"
	  }
	}


14. assign raw data from above signOta..
		var rawTx = "0xf9051b028083030d4083015f9094000000000000000000000000000000000000000580b904b1045501e80a00885c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000001bc16d674ecee334f2d6d8eedbf6f18cf6cc54676814d867dcadf66a9157c144c000f95cfe8f559b0cc87b5b3d3527654e3f4ca0115aeb2f033343f226e3aa5c5a747248d2e1d10a5a6485f20c67062df0dfd5f3db8d900f00044104f17cde1e2f168e8f5df5b6cb3ff64d9a683ccbcf3eecdc2c0741496d0d3af84154caf65833d50eca1ed46350177d92b2560078f32f8fc7564cf0a0932ef7609520a6ead3d71aab29fdc362a806b2ab8eba63d9521b7f7d40c8495a311f3328dfaa2035af32257fa04736fcfcff69f2f4642e922a241543f1e1ca9013c081aba97e4d4104f17cde1e2f168e8f5df5b6cb3ff64d9a683ccbcf3eecdc2c0741496d0d3af84154caf65833d50eca1ed46350177d92b2560078f32f8fc7564cf0a0932ef7609520b2274e85006b27aa12413e5c6bf0ce6f0d45d1f0963e709d92ce0e6118e53e6c207af0af3320557b1fb2f79b120379c16d453777a2551b5db3fbd3633729e5af444104503ec3333ce3d88f7c0b2210c28b0d133e96836e7ec1b2df2e87915bacff3400778220e19ace7969ed617145d081fc7f3439888a30f257030c81b97dd137abfa2073b4894f1e52e400e51a0a3e8e99c8eb1f15757a30094c41897529e5f3d951492003b24ee0e61c8de89019218c2ef41934fd074e0e73ec6241e0f7d0ed836b180c41041e7741708f4a2405f9bbba523dd45fe9745bdd9c804261c0b2893c9750145035f533b4e1460272937d7264bb379911b2fee0753313172523c5151c2971ff98f0208db2b2e5af3abef54c8329b4f3a6c547ffe63ae2b334531a5124df8bf1107483204ae0f635e48b3aa09665bf740161d3627b1934803684a89394557ab9a4b5a8474104add48ca323aed1d08fd88f157405ec7e02776cfa00a601042cf79fa0902ed5ab1f42d6faf78b37d2a4aa9b634926f3106533a7fd1276f7f657aa2fa2c4695ab3203343f226e3aa5c5a747248d2e1d10a5a6485f20c67062df0dfd5f3db8d900f001ca06c28c111baa130fd7e0d785add156c95b0077ed7271a81a2748bf76a0c231777a052d400b65125fa841c646605a8bf9c26593b56897a8ff7ccdd26239088ff0af7c0c0c0c0"

15. begin contract ota transfer transaction
	eth.sendRawTransaction(rawTx)

16. veriy the ota tranfer result
	erc20simple.otabalanceOf(otaAddr2)
